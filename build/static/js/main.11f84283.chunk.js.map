{"version":3,"sources":["CommentInput.js","Comment.js","CommentList.js","CommentApp.js","index.js"],"names":["CommentInput","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","username","content","_loadUsername","localStorage","getItem","setState","textarea","focus","setItem","event","_saveUsername","target","value","props","onSubmit","createdTime","Date","_this2","react_default","a","createElement","className","onBlur","handleUsernameBlur","bind","onChange","handleUsernameChange","ref","handleContentChange","onClick","handleSubmit","Component","Comment","timeString","_updateTimeString","_timer","setInterval","clearInterval","comment","duration","now","concat","Math","round","max","onDeleteComment","index","handleDeleteComment","CommentList","comments","map","i","src_Comment","key","defaultProps","CommentApp","_loadComments","JSON","parse","stringify","alert","push","_saveComments","splice","src_CommentInput","handleSubmitComment","src_CommentList","ReactDOM","render","src_CommentApp","document","getElementById"],"mappings":"4LA+FeA,cAvFb,SAAAA,IAAe,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,IACbC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,KAAAH,QACKI,MAAQ,CACXC,SAAU,GACVC,QAAS,IAJET,oFASbG,KAAKO,wDAIL,IAAMF,EAAWG,aAAaC,QAAQ,YACnCJ,GACDL,KAAKU,SAAS,CAACL,yDAKjBL,KAAKW,SAASC,8CAGFP,GACZG,aAAaK,QAAQ,WAAWR,8CAIfS,GACjBd,KAAKe,cAAcD,EAAME,OAAOC,oDAGZH,GACpBd,KAAKU,SAAS,CACZL,SAAUS,EAAME,OAAOC,oDAINH,GACnBd,KAAKU,SAAS,CACZJ,QAASQ,EAAME,OAAOC,+CAKpBjB,KAAKkB,MAAMC,UACbnB,KAAKkB,MAAMC,SAAS,CAClBd,SAAUL,KAAKI,MAAMC,SACrBC,QAASN,KAAKI,MAAME,QACpBc,aAAa,IAAIC,OAGrBrB,KAAKU,SAAS,CAAEJ,QAAS,sCAGjB,IAAAgB,EAAAtB,KACR,OACEuB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACbH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,sBAAhB,4BACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBACbH,EAAAC,EAAAC,cAAA,SACEE,OAAU3B,KAAK4B,mBAAmBC,KAAK7B,MACvCiB,MAAOjB,KAAKI,MAAMC,SAClByB,SAAU9B,KAAK+B,qBAAqBF,KAAK7B,UAG/CuB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACbH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,sBAAhB,kCACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBACbH,EAAAC,EAAAC,cAAA,YACEO,IAAO,SAACrB,GAAYW,EAAKX,SAAWA,GACpCM,MAAOjB,KAAKI,MAAME,QAClBwB,SAAU9B,KAAKiC,oBAAoBJ,KAAK7B,UAG9CuB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wBACbH,EAAAC,EAAAC,cAAA,UACES,QAASlC,KAAKmC,aAAaN,KAAK7B,OADlC,yBAlFiBoC,aC0DZC,cAnDb,SAAAA,IAAc,IAAAxC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAqC,IACZxC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAuC,GAAAlC,KAAAH,QACKI,MAAQ,CAAEkC,WAAY,IAFfzC,oFAMZG,KAAKuC,oBACLvC,KAAKwC,OAASC,YAAYzC,KAAKuC,kBAAkBV,KAAK7B,MAAO,oDAK7D0C,cAAc1C,KAAKwC,oDAInB,IAAMG,EAAU3C,KAAKkB,MAAMyB,QACrBC,IAAavB,KAAKwB,MAAQF,EAAQvB,aAAe,IACvDpB,KAAKU,SAAS,CACZ4B,WAAYM,EAAW,GAAX,GAAAE,OACLC,KAAKC,MAAMJ,EAAW,IADjB,yBAAAE,OAELC,KAAKC,MAAMD,KAAKE,IAAIL,EAAU,IAFzB,gEAOX5C,KAAKkB,MAAMgC,iBACZlD,KAAKkB,MAAMgC,gBAAgBlD,KAAKkB,MAAMiC,wCAIjC,IACCR,EAAY3C,KAAKkB,MAAjByB,QACR,OACEpB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACbH,EAAAC,EAAAC,cAAA,YAAOkB,EAAQtC,SAAf,KADF,KAGAkB,EAAAC,EAAAC,cAAA,SAAIkB,EAAQrC,SACZiB,EAAAC,EAAAC,cAAA,QAAMC,UAAU,uBACb1B,KAAKI,MAAMkC,YAEdf,EAAAC,EAAAC,cAAA,QAAMS,QAASlC,KAAKoD,oBAAoBvB,KAAK7B,MAC7C0B,UAAU,kBADV,wBAjDcU,aCChBiB,8LASgBF,GACfnD,KAAKkB,MAAMgC,iBACZlD,KAAKkB,MAAMgC,gBAAgBC,oCAItB,IAAAtD,EAAAG,KACP,OACEuB,EAAAC,EAAAC,cAAA,WACGzB,KAAKkB,MAAMoC,SAASC,IAAI,SAACZ,EAASa,GAAV,OACvBjC,EAAAC,EAAAC,cAACgC,EAAD,CAASd,QAASA,EAASe,IAAKF,EAChCL,MAAOK,EAAGN,gBAAiBrD,EAAKuD,oBAAoBvB,KAAKhC,eApBzCuC,aAApBiB,EAMGM,aAAe,CACpBL,SAAU,IAoBCD,QCwBAO,cAlDb,SAAAA,IAAe,IAAA/D,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA4D,IACb/D,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA8D,GAAAzD,KAAAH,QACKI,MAAQ,CACXkD,SAAU,IAHCzD,oFAQbG,KAAK6D,wDAGL,IAAIP,EAAW9C,aAAaC,QAAQ,YACjC6C,IACDA,EAAWQ,KAAKC,MAAMT,GACtBtD,KAAKU,SAAS,CAAC4C,oDAILA,GACZ9C,aAAaK,QAAQ,WAAWiD,KAAKE,UAAUV,gDAG5BX,GACnB,GAAKA,EAAL,CACA,IAAKA,EAAQtC,SAAU,OAAO4D,MAAM,wCACpC,IAAKtB,EAAQrC,QAAS,OAAO2D,MAAM,8CACnC,IAAIX,EAAWtD,KAAKI,MAAMkD,SAC1BA,EAASY,KAAKvB,GACd3C,KAAKU,SAAS4C,GACdtD,KAAKmE,cAAcb,gDAGDH,GAClB,IAAMG,EAAStD,KAAKI,MAAMkD,SAC1BA,EAASc,OAAOjB,EAAM,GACtBnD,KAAKU,SAAS,CAAC4C,aACftD,KAAKmE,cAAcb,oCAInB,OACE/B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACbH,EAAAC,EAAAC,cAAC4C,EAAD,CAAclD,SAAUnB,KAAKsE,oBAAoBzC,KAAK7B,QACtDuB,EAAAC,EAAAC,cAAC8C,EAAD,CAAajB,SAAUtD,KAAKI,MAAMkD,SAClCJ,gBAAiBlD,KAAKoD,oBAAoBvB,KAAK7B,gBA7C9BoC,mBCCzBoC,IAASC,OACPlD,EAAAC,EAAAC,cAACiD,EAAD,MACAC,SAASC,eAAe","file":"static/js/main.11f84283.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\n\nclass CommentInput extends Component {\n  static propTypes = {\n    onSubmit:PropTypes.func\n  }\n\n  constructor () {\n    super()\n    this.state = {\n      username: '',\n      content: ''\n    }\n  }\n\n  componentWillMount(){\n    this._loadUsername()\n  }\n\n  _loadUsername(){\n    const username = localStorage.getItem('username')\n    if(username){\n      this.setState({username})\n    }\n  }\n\n  componentDidMount(){\n    this.textarea.focus()\n  }\n\n  _saveUsername(username){\n    localStorage.setItem('username',username)\n\n  }\n\n  handleUsernameBlur(event){\n    this._saveUsername(event.target.value)\n  }\n\n  handleUsernameChange (event) {\n    this.setState({\n      username: event.target.value\n    })\n  }\n\n  handleContentChange (event) {\n    this.setState({\n      content: event.target.value\n    })\n  }\n\n  handleSubmit () {\n    if (this.props.onSubmit) {\n      this.props.onSubmit({\n        username: this.state.username,\n        content: this.state.content,\n        createdTime:+new Date()\n      })\n    }\n    this.setState({ content: '' })\n  }\n\n  render () {\n    return (\n      <div className='comment-input'>\n        <div className='comment-field'>\n          <span className='comment-field-name'>用户名：</span>\n          <div className='comment-field-input'>\n            <input\n              onBlur = {this.handleUsernameBlur.bind(this)}\n              value={this.state.username}\n              onChange={this.handleUsernameChange.bind(this)} />\n          </div>\n        </div>\n        <div className='comment-field'>\n          <span className='comment-field-name'>评论内容：</span>\n          <div className='comment-field-input'>\n            <textarea\n              ref = {(textarea)=>{this.textarea = textarea}}\n              value={this.state.content}\n              onChange={this.handleContentChange.bind(this)} />\n          </div>\n        </div>\n        <div className='comment-field-button'>\n          <button\n            onClick={this.handleSubmit.bind(this)}>\n            发布\n          </button>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default CommentInput\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\n\nclass Comment extends Component {\n  static propTypes = {\n    comment: PropTypes.object.isRequired,\n    onDeleteComment:PropTypes.func,\n    index: PropTypes.number\n  }\n\n  constructor() {\n    super()\n    this.state = { timeString: '' }\n  }\n\n  componentWillMount() {\n    this._updateTimeString()\n    this._timer = setInterval(this._updateTimeString.bind(this), 1000)\n  }\n\n\n  componentWillUnmount(){\n    clearInterval(this._timer)\n  }\n\n  _updateTimeString() {\n    const comment = this.props.comment\n    const duration = (+Date.now() - comment.createdTime) / 1000\n    this.setState({\n      timeString: duration > 60\n        ? `${Math.round(duration / 60)}分钟前`\n        : `${Math.round(Math.max(duration, 1))}秒前`\n    })\n  }\n\n  handleDeleteComment(){\n    if(this.props.onDeleteComment){\n      this.props.onDeleteComment(this.props.index)\n    }\n  }\n\n  render() {\n    const { comment } = this.props\n    return (\n      <div className='comment'>\n        <div className='comment-user'>\n          <span>{comment.username} </span>:\n        </div>\n        <p>{comment.content}</p>\n        <span className='comment-createdtime'>\n          {this.state.timeString}\n        </span>\n        <span onClick={this.handleDeleteComment.bind(this)}\n        className=\"comment-delete\">\n          删除\n        </span>\n      </div>\n    )\n  }\n}\n\nexport default Comment\n","import React, { Component } from 'react'\nimport Comment from './Comment'\nimport PropTypes from 'prop-types'\n\nclass CommentList extends Component {\n  static propTypes = {\n    comments:PropTypes.array,\n    onDeleteComment:PropTypes.func\n  }\n\n  static defaultProps = {\n    comments: []\n  }\n  handleDeleteComment(index){\n    if(this.props.onDeleteComment){\n      this.props.onDeleteComment(index)\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        {this.props.comments.map((comment, i) =>\n          <Comment comment={comment} key={i} \n          index={i} onDeleteComment={this.handleDeleteComment.bind(this)}/>\n        )}\n      </div>\n    )\n  }\n}\n\nexport default CommentList\n","import React, { Component } from 'react'\nimport CommentInput from './CommentInput'\nimport CommentList from './CommentList'\n\nclass CommentApp extends Component {\n  constructor () {\n    super()\n    this.state = {\n      comments: []\n    }\n  }\n\n  componentWillMount(){\n    this._loadComments()\n  }\n  _loadComments(){\n    let comments = localStorage.getItem('comments')\n    if(comments){\n      comments = JSON.parse(comments)\n      this.setState({comments})//这里加大括号功能才正常\n    }\n  }\n\n  _saveComments(comments){\n    localStorage.setItem('comments',JSON.stringify(comments))\n  }\n\n  handleSubmitComment (comment) {\n    if (!comment) return\n    if (!comment.username) return alert('请输入用户名')\n    if (!comment.content) return alert('请输入评论内容')\n    let comments = this.state.comments\n    comments.push(comment)\n    this.setState(comments)//这里不加大括号功能也正常\n    this._saveComments(comments)\n  }\n\n  handleDeleteComment(index){\n    const comments=this.state.comments\n    comments.splice(index,1)\n    this.setState({comments})\n    this._saveComments(comments)\n  }\n\n  render() {\n    return (\n      <div className='wrapper'>\n        <CommentInput onSubmit={this.handleSubmitComment.bind(this)} />\n        <CommentList comments={this.state.comments}\n        onDeleteComment={this.handleDeleteComment.bind(this)}/>\n      </div>\n    )\n  }\n}\n\nexport default CommentApp\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport CommentApp from './CommentApp'\nimport './index.css'\n\nReactDOM.render(\n  <CommentApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}